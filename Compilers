Компиляторы

1. Введение
а. Введение
б. История и развитие языков программирования
в. Классификация ЯП
г. Структура компилятора
д. Язык с которым будем работать

2. Лексический анализ
а. Примеры
б. Регулярные языки
в. Формальные языки
г. Лексическое описание языка

3. Лексический анализ
а. Конечные автоматы
б. регулярные выражения
в. NFA в DFA
г. Реализация конечных автоматов

4. Парсинг
а. Контекстно-свободные грамматики
б. Неоднозначность грамматики
в. Обработка ошибок

5. Парсинг (Нисходящий синтаксический анализ)
а. AST
б. Рекурсивный спуск
в. Левая рекурсия

6. Парсинг (Восходящий парсер)
а. Разбор алгоритма
б. Сравнение парсеров

7. Семантический анализ и проверка типов
а. Области видимости
б. Таблица символов
в. Типы, проверка типов
г. Subtyping
д. Реализация проверки типов
е. Восстановление после ошибок
ж. Статические и динамические типы

Середина семестра (Начало back-end)

8. Организация runtime
а. управление ресурсами 
б. Статические-динамические структуры
в. организация хранения (стек и куча)
г. Запуск программы (корректность, скрость выполнения)
д. Стек вызовов

9. Генерация кода
а. Стековая машина
б. Разбор примера
в. Временные переменные
г. Представление объектов в памяти (Классы и наследование)

10. Операционная семантика
а. виды семантик (Интерпретационная, трансляционная, ..)
б. Контекст
в. Пример

11. Локальная оптимизация
а. intermediate language
б. Современные компиляторы и оптимизация
в. Выбор цели для оптимизации
г. Unreachable code
д. Взаимодействие оптимизаций

12. Глобальная оптимизация
а. Анализ dataflow
б. Замена на константы
в. Анализ циклов
г. Dead code

13. Распределение регистров
а. Мотивация. (Intermediate language)
б. Раскраска графа
в. алгоритм Хайтина
г. Кэш

14. Сборка мусора
а. Автоматическое управление памятью
б. Подсчет ссылок

15. Заключение. 
Сравнение нашего языка с Java/C++
